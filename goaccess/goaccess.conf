# goaccess/goaccess.conf
# GoAccess configuration file.

# --- Log Format ---
# Corresponds to the 'combined_realip' format defined in nginx.conf
# Format: $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"
time-format %H:%M:%S
date-format %d/%b/%Y
log-format %h - %^ [%d:%t %^] "%r" %s %b "%R" "%u"

# --- Real-time HTML Report ---
# Enable real-time HTML output
real-time-html true

# Specify the output path for the HTML report (relative to where goaccess is run or configured in docker-compose)
# If running in Docker, this might point to a volume mount.
# Example: output /reports/report.html
# Note: In the provided docker-compose example, output is handled by command-line args, overriding this.

# WebSocket server configuration for real-time updates
# These are typically set via command-line arguments when running goaccess, especially in Docker.
# ws-url ws://<your-host-or-ip>:7890/ws
# port 7890
# addr 0.0.0.0

# --- Other Options ---

# Enable IP address resolver (may slow down report generation)
# addr-lookup false
# enable-geoip false # Set to true if using GeoIP database

# Ignore specific IP addresses (e.g., localhost, monitoring)
# ignore-ip 127.0.0.1
# ignore-ip ::1

# Ignore specific crawlers/bots by User-Agent (can supplement Lua filter)
# ignore-crawler AhrefsBot
# ignore-crawler SemrushBot

# Ignore specific URL paths or file types
# ignore-panel REQUEST /some/admin/path
# ignore-panel FTYPE .css
# ignore-panel FTYPE .js
# ignore-panel FTYPE .png

# Keep track of the Tarpit API endpoint separately if desired
# 404-include true # Include 404s in stats
# static-file .html
# static-file /api/tarpit # Treat tarpit endpoint as a 'static file' for tracking

# Enable additional panels (optional)
# enable-panel KEYPHRASES
# enable-panel REMOTE_USER

# Color scheme (for terminal output, not relevant for HTML)
# color-scheme 2 # 0: default, 1: light, 2: dark
# color-scheme 1 # Light mode for terminal output  
